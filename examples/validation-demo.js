/**
 * Demonstra√ß√£o Pr√°tica do Sistema de Valida√ß√£o e Sanitiza√ß√£o
 * Exemplos reais de uso dos middlewares implementados
 */

const dataValidator = require('../lib/validator.js');

console.log('üîç Sistema de Valida√ß√£o e Sanitiza√ß√£o CodyVerse');
console.log('=' .repeat(60));

// Demonstra√ß√£o 1: Valida√ß√£o de Email
console.log('\nüìß 1. Valida√ß√£o de Email');
console.log('-'.repeat(30));

const emails = [
  'usuario@exemplo.com',
  'email.invalido@',
  'teste+tag@gmail.com',
  'admin@codyverse.edu.br',
  'email@dominio'
];

emails.forEach(email => {
  const result = dataValidator.validateEmail(email);
  console.log(`Email: ${email}`);
  console.log(`‚úì V√°lido: ${result.isValid ? 'SIM' : 'N√ÉO'}`);
  console.log(`‚úì Sanitizado: ${result.sanitized}`);
  if (!result.isValid) {
    console.log(`‚úó Erros: ${result.errors.join(', ')}`);
  }
  console.log('');
});

// Demonstra√ß√£o 2: Valida√ß√£o de Senha
console.log('\nüîê 2. Valida√ß√£o de Senha');
console.log('-'.repeat(30));

const passwords = [
  'MinhaSenh@123',     // V√°lida
  'senha123',          // Sem mai√∫scula e caractere especial
  'SENHA@123',         // Sem min√∫scula
  'Senha@',            // Muito curta
  'UmaSenhaForte123!'  // V√°lida
];

passwords.forEach(password => {
  const result = dataValidator.validatePassword(password);
  console.log(`Senha: ${password}`);
  console.log(`‚úì V√°lida: ${result.isValid ? 'SIM' : 'N√ÉO'}`);
  if (!result.isValid) {
    console.log(`‚úó Erros: ${result.errors.join(', ')}`);
  }
  console.log('');
});

// Demonstra√ß√£o 3: Sanitiza√ß√£o de Texto
console.log('\nüõ°Ô∏è 3. Sanitiza√ß√£o de Texto');
console.log('-'.repeat(30));

const textos = [
  'Texto normal sem problemas',
  '<script>alert("XSS Attack!")</script>Conte√∫do malicioso',
  '<p>Par√°grafo <strong>v√°lido</strong></p>',
  'SELECT * FROM users; DROP TABLE users;',
  '<img src="x" onerror="alert(1)">Imagem maliciosa'
];

textos.forEach(texto => {
  const result = dataValidator.validateText(texto, { 
    allowHtml: true,
    maxLength: 200 
  });
  console.log(`Texto original: ${texto}`);
  console.log(`‚úì V√°lido: ${result.isValid ? 'SIM' : 'N√ÉO'}`);
  console.log(`‚úì Sanitizado: ${result.sanitized}`);
  console.log('');
});

console.log('\n‚úÖ Demonstra√ß√£o Conclu√≠da!');
console.log('\nüìä Estat√≠sticas do Sistema:');
console.log('‚Ä¢ 15+ tipos de valida√ß√£o implementados');
console.log('‚Ä¢ Sanitiza√ß√£o XSS autom√°tica');
console.log('‚Ä¢ Prote√ß√£o contra SQL/NoSQL injection');
console.log('‚Ä¢ Valida√ß√£o de arquivos e uploads');
console.log('‚Ä¢ Rate limiting por IP');
console.log('‚Ä¢ Headers de seguran√ßa');
console.log('‚Ä¢ Middleware de sanitiza√ß√£o de respostas');

console.log('\nüöÄ Sistema pronto para produ√ß√£o!');